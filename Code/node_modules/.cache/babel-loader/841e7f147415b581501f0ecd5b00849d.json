{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext,useEffect}from'react';import web3 from'./connection/web3';import Navbar from'./components/Layout/Navbar';import Main from'./components/Content/Main';import Web3Context from'./store/web3-context';import CollectionContext from'./store/collection-context';import MarketplaceContext from'./store/marketplace-context';import NFTCollection from'./abis/NFTCollection.json';import NFTMarketplace from'./abis/NFTMarketplace.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var web3Ctx=useContext(Web3Context);var collectionCtx=useContext(CollectionContext);var marketplaceCtx=useContext(MarketplaceContext);useEffect(function(){// Check if the user has Metamask active\nif(!web3){window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');return;}// Function to fetch all the blockchain data\nvar loadBlockchainData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var account,networkId,nftDeployedNetwork,nftContract,mktDeployedNetwork,mktContract,totalSupply,offerCount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return window.ethereum.request({method:'eth_requestAccounts'});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 8:_context.next=10;return web3Ctx.loadAccount(web3);case 10:account=_context.sent;_context.next=13;return web3Ctx.loadNetworkId(web3);case 13:networkId=_context.sent;// Load Contracts      \nnftDeployedNetwork=NFTCollection.networks[networkId];nftContract=collectionCtx.loadContract(web3,NFTCollection,nftDeployedNetwork);mktDeployedNetwork=NFTMarketplace.networks[networkId];mktContract=marketplaceCtx.loadContract(web3,NFTMarketplace,mktDeployedNetwork);if(!nftContract){_context.next=26;break;}_context.next=21;return collectionCtx.loadTotalSupply(nftContract);case 21:totalSupply=_context.sent;// Load Collection\ncollectionCtx.loadCollection(nftContract,totalSupply);// Event subscription\nnftContract.events.Transfer().on('data',function(event){collectionCtx.updateCollection(nftContract,event.returnValues.tokenId,event.returnValues.to);collectionCtx.setNftIsLoading(false);}).on('error',function(error){console.log(error);});_context.next=27;break;case 26:window.alert('NFTCollection contract not deployed to detected network.');case 27:if(!mktContract){_context.next=38;break;}_context.next=30;return marketplaceCtx.loadOfferCount(mktContract);case 30:offerCount=_context.sent;// Load offers\nmarketplaceCtx.loadOffers(mktContract,offerCount);// Load User Funds\naccount&&marketplaceCtx.loadUserFunds(mktContract,account);// Event OfferFilled subscription \nmktContract.events.OfferFilled().on('data',function(event){marketplaceCtx.updateOffer(event.returnValues.offerId);collectionCtx.updateOwner(event.returnValues.id,event.returnValues.newOwner);marketplaceCtx.setMktIsLoading(false);}).on('error',function(error){console.log(error);});// Event Offer subscription \nmktContract.events.Offer().on('data',function(event){marketplaceCtx.addOffer(event.returnValues);marketplaceCtx.setMktIsLoading(false);}).on('error',function(error){console.log(error);});// Event offerCancelled subscription \nmktContract.events.OfferCancelled().on('data',function(event){marketplaceCtx.updateOffer(event.returnValues.offerId);collectionCtx.updateOwner(event.returnValues.id,event.returnValues.owner);marketplaceCtx.setMktIsLoading(false);}).on('error',function(error){console.log(error);});_context.next=39;break;case 38:window.alert('NFTMarketplace contract not deployed to detected network.');case 39:collectionCtx.setNftIsLoading(false);marketplaceCtx.setMktIsLoading(false);// Metamask Event Subscription - Account changed\nwindow.ethereum.on('accountsChanged',function(accounts){web3Ctx.loadAccount(web3);accounts[0]&&marketplaceCtx.loadUserFunds(mktContract,accounts[0]);});// Metamask Event Subscription - Network changed\nwindow.ethereum.on('chainChanged',function(chainId){window.location.reload();});case 43:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function loadBlockchainData(){return _ref.apply(this,arguments);};}();loadBlockchainData();},[]);var showNavbar=web3&&collectionCtx.contract&&marketplaceCtx.contract;var showContent=web3&&collectionCtx.contract&&marketplaceCtx.contract&&web3Ctx.account;return/*#__PURE__*/_jsxs(React.Fragment,{children:[showNavbar&&/*#__PURE__*/_jsx(Navbar,{}),showContent&&/*#__PURE__*/_jsx(Main,{})]});};export default App;","map":{"version":3,"sources":["C:/Users/pavik/Desktop/nft-marketplace/src/App.js"],"names":["React","useContext","useEffect","web3","Navbar","Main","Web3Context","CollectionContext","MarketplaceContext","NFTCollection","NFTMarketplace","App","web3Ctx","collectionCtx","marketplaceCtx","window","alert","loadBlockchainData","ethereum","request","method","console","error","loadAccount","account","loadNetworkId","networkId","nftDeployedNetwork","networks","nftContract","loadContract","mktDeployedNetwork","mktContract","loadTotalSupply","totalSupply","loadCollection","events","Transfer","on","event","updateCollection","returnValues","tokenId","to","setNftIsLoading","log","loadOfferCount","offerCount","loadOffers","loadUserFunds","OfferFilled","updateOffer","offerId","updateOwner","id","newOwner","setMktIsLoading","Offer","addOffer","OfferCancelled","owner","accounts","chainId","location","reload","showNavbar","contract","showContent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\n\r\nimport web3 from './connection/web3';\r\nimport Navbar from './components/Layout/Navbar';\r\nimport Main from './components/Content/Main';\r\nimport Web3Context from './store/web3-context';\r\nimport CollectionContext from './store/collection-context';\r\nimport MarketplaceContext from './store/marketplace-context'\r\nimport NFTCollection from './abis/NFTCollection.json';\r\nimport NFTMarketplace from './abis/NFTMarketplace.json';\r\n\r\nconst App = () => {\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n  \r\n  useEffect(() => {\r\n    // Check if the user has Metamask active\r\n    if(!web3) {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n      return;\r\n    }\r\n    \r\n    // Function to fetch all the blockchain data\r\n    const loadBlockchainData = async() => {\r\n      // Request accounts acccess if needed\r\n      try {\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });  \r\n      } catch(error) {\r\n        console.error(error);\r\n      }\r\n      \r\n      // Load account\r\n      const account = await web3Ctx.loadAccount(web3);\r\n\r\n      // Load Network ID\r\n      const networkId = await web3Ctx.loadNetworkId(web3);\r\n\r\n      // Load Contracts      \r\n      const nftDeployedNetwork = NFTCollection.networks[networkId];\r\n      const nftContract = collectionCtx.loadContract(web3, NFTCollection, nftDeployedNetwork);\r\n\r\n      const mktDeployedNetwork = NFTMarketplace.networks[networkId];\r\n      const mktContract = marketplaceCtx.loadContract(web3, NFTMarketplace, mktDeployedNetwork);\r\n\r\n      if(nftContract) {        \r\n        // Load total Supply\r\n        const totalSupply = await collectionCtx.loadTotalSupply(nftContract);\r\n        \r\n        // Load Collection\r\n        collectionCtx.loadCollection(nftContract, totalSupply);       \r\n\r\n        // Event subscription\r\n        nftContract.events.Transfer()\r\n        .on('data', (event) => {\r\n          collectionCtx.updateCollection(nftContract, event.returnValues.tokenId, event.returnValues.to);\r\n          collectionCtx.setNftIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n      } else {\r\n        window.alert('NFTCollection contract not deployed to detected network.')\r\n      }\r\n\r\n      if(mktContract) {\r\n        // Load offer count\r\n        const offerCount = await marketplaceCtx.loadOfferCount(mktContract);\r\n        \r\n        // Load offers\r\n        marketplaceCtx.loadOffers(mktContract, offerCount); \r\n        \r\n        // Load User Funds\r\n        account && marketplaceCtx.loadUserFunds(mktContract, account);\r\n\r\n        // Event OfferFilled subscription \r\n        mktContract.events.OfferFilled()\r\n        .on('data', (event) => {\r\n          marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n          collectionCtx.updateOwner(event.returnValues.id, event.returnValues.newOwner);\r\n          marketplaceCtx.setMktIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n\r\n        // Event Offer subscription \r\n        mktContract.events.Offer()\r\n        .on('data', (event) => {\r\n          marketplaceCtx.addOffer(event.returnValues);\r\n          marketplaceCtx.setMktIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n\r\n        // Event offerCancelled subscription \r\n        mktContract.events.OfferCancelled()\r\n        .on('data', (event) => {\r\n          marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n          collectionCtx.updateOwner(event.returnValues.id, event.returnValues.owner);\r\n          marketplaceCtx.setMktIsLoading(false);\r\n        })\r\n        .on('error', (error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n      } else {\r\n        window.alert('NFTMarketplace contract not deployed to detected network.')\r\n      }\r\n\r\n      collectionCtx.setNftIsLoading(false);\r\n      marketplaceCtx.setMktIsLoading(false);\r\n\r\n      // Metamask Event Subscription - Account changed\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        web3Ctx.loadAccount(web3);\r\n        accounts[0] && marketplaceCtx.loadUserFunds(mktContract, accounts[0]);\r\n      });\r\n\r\n      // Metamask Event Subscription - Network changed\r\n      window.ethereum.on('chainChanged', (chainId) => {\r\n        window.location.reload();\r\n      });\r\n    };\r\n    \r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  const showNavbar = web3 && collectionCtx.contract && marketplaceCtx.contract;\r\n  const showContent = web3 && collectionCtx.contract && marketplaceCtx.contract && web3Ctx.account;\r\n  \r\n  return(\r\n    <React.Fragment>\r\n      {showNavbar && <Navbar />}\r\n      {showContent && <Main />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}