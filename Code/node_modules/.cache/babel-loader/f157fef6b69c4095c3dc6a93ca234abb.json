{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useState}from'react';import Web3Context from'../../store/web3-context';import MarketplaceContext from'../../store/marketplace-context';import web3 from'../../connection/web3';import{formatPrice}from'../../helpers/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navbar=function Navbar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),fundsLoading=_useState2[0],setFundsLoading=_useState2[1];var web3Ctx=useContext(Web3Context);var marketplaceCtx=useContext(MarketplaceContext);var connectWalletHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return window.ethereum.request({method:'eth_requestAccounts'});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 8:// Load accounts\nweb3Ctx.loadAccount(web3);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function connectWalletHandler(){return _ref.apply(this,arguments);};}();var claimFundsHandler=function claimFundsHandler(){marketplaceCtx.contract.methods.claimFunds().send({from:web3Ctx.account}).on('transactionHash',function(hash){setFundsLoading(true);}).on('error',function(error){window.alert('Something went wrong when pushing to the blockchain');setFundsLoading(false);});};// Event ClaimFunds subscription \nmarketplaceCtx.contract.events.ClaimFunds().on('data',function(event){marketplaceCtx.loadUserFunds(marketplaceCtx.contract,web3Ctx.account);setFundsLoading(false);}).on('error',function(error){console.log(error);});var etherscanUrl;if(web3Ctx.networkId===3){etherscanUrl='https://ropsten.etherscan.io';}else if(web3Ctx.networkId===4){etherscanUrl='https://rinkeby.etherscan.io';}else if(web3Ctx.networkId===5){etherscanUrl='https://goerli.etherscan.io';}else{etherscanUrl='https://etherscan.io';}return/*#__PURE__*/_jsx(\"nav\",{className:\"navbar navbar-expand-sm navbar-light bg-white p-0\",children:/*#__PURE__*/_jsxs(\"ul\",{className:\"navbar-nav ms-auto\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"nav-item\",children:[marketplaceCtx.userFunds>0&&!fundsLoading&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-info btn-block navbar-btn text-white\",onClick:claimFundsHandler,children:\"CLAIM \".concat(formatPrice(marketplaceCtx.userFunds),\" ETH\")}),fundsLoading&&/*#__PURE__*/_jsx(\"div\",{class:\"d-flex justify-content-center text-info\",children:/*#__PURE__*/_jsx(\"div\",{class:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{class:\"sr-only\"})})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"nav-item\",children:[web3Ctx.account&&/*#__PURE__*/_jsx(\"a\",{className:\"nav-link small\",href:\"\".concat(etherscanUrl,\"/address/\").concat(web3Ctx.account),target:\"blank\",rel:\"noopener noreferrer\",children:web3Ctx.account}),!web3Ctx.account&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-info text-white\",onClick:connectWalletHandler,children:\"Connect your wallet\"})]})]})});};export default Navbar;","map":{"version":3,"sources":["C:/Users/pavik/Desktop/nft-marketplace/src/components/Layout/Navbar.js"],"names":["useContext","useState","Web3Context","MarketplaceContext","web3","formatPrice","Navbar","fundsLoading","setFundsLoading","web3Ctx","marketplaceCtx","connectWalletHandler","window","ethereum","request","method","console","error","loadAccount","claimFundsHandler","contract","methods","claimFunds","send","from","account","on","hash","alert","events","ClaimFunds","event","loadUserFunds","log","etherscanUrl","networkId","userFunds"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\n\r\nimport Web3Context from '../../store/web3-context';\r\nimport MarketplaceContext from '../../store/marketplace-context';\r\nimport web3 from '../../connection/web3';\r\nimport { formatPrice } from '../../helpers/utils';\r\n\r\nconst Navbar = () => {\r\n  const [fundsLoading, setFundsLoading] = useState(false);\r\n  \r\n  const web3Ctx = useContext(Web3Context);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n  \r\n  const connectWalletHandler = async() => {\r\n    try {\r\n      // Request account access\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    } catch(error) {\r\n      console.error(error);\r\n    }\r\n\r\n    // Load accounts\r\n    web3Ctx.loadAccount(web3);\r\n  };\r\n\r\n  const claimFundsHandler = () => {\r\n    marketplaceCtx.contract.methods.claimFunds().send({ from: web3Ctx.account })\r\n    .on('transactionHash', (hash) => {\r\n      setFundsLoading(true);\r\n    })\r\n    .on('error', (error) => {\r\n      window.alert('Something went wrong when pushing to the blockchain');\r\n      setFundsLoading(false);\r\n    });\r\n  };\r\n\r\n  // Event ClaimFunds subscription \r\n  marketplaceCtx.contract.events.ClaimFunds()\r\n  .on('data', (event) => {\r\n    marketplaceCtx.loadUserFunds(marketplaceCtx.contract, web3Ctx.account);\r\n    setFundsLoading(false);\r\n  })\r\n  .on('error', (error) => {\r\n    console.log(error);\r\n  });\r\n\r\n  let etherscanUrl;\r\n\r\n  if(web3Ctx.networkId === 3) {\r\n    etherscanUrl = 'https://ropsten.etherscan.io'\r\n  } else if(web3Ctx.networkId === 4) {\r\n    etherscanUrl = 'https://rinkeby.etherscan.io'\r\n  } else if(web3Ctx.networkId === 5) {\r\n    etherscanUrl = 'https://goerli.etherscan.io'\r\n  } else {\r\n    etherscanUrl = 'https://etherscan.io'\r\n  }\r\n  \r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-white p-0\">      \r\n      <ul className=\"navbar-nav ms-auto\">\r\n        <li className=\"nav-item\">\r\n          {marketplaceCtx.userFunds > 0 && !fundsLoading &&\r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-info btn-block navbar-btn text-white\" \r\n              onClick={claimFundsHandler}\r\n            >          \r\n              {`CLAIM ${formatPrice(marketplaceCtx.userFunds)} ETH`}\r\n            </button>}\r\n          {fundsLoading &&\r\n            <div class=\"d-flex justify-content-center text-info\">\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\"></span>\r\n              </div>\r\n          </div>}          \r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {web3Ctx.account && \r\n            <a \r\n              className=\"nav-link small\" \r\n              href={`${etherscanUrl}/address/${web3Ctx.account}`}\r\n              target=\"blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {web3Ctx.account}\r\n            </a>}\r\n          {!web3Ctx.account && \r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-info text-white\" \r\n              onClick={connectWalletHandler} \r\n            > \r\n              Connect your wallet\r\n            </button>}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );  \r\n};\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}