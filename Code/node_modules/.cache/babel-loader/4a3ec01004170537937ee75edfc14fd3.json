{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/pavik/Desktop/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useReducer}from'react';import Web3Context from'./web3-context';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultWeb3State={account:null,networkId:null};var web3Reducer=function web3Reducer(state,action){if(action.type==='ACCOUNT'){return{account:action.account,networkId:state.networkId};}if(action.type==='NETWORKID'){return{account:state.account,networkId:action.networkId};}return defaultWeb3State;};var Web3Provider=function Web3Provider(props){var _useReducer=useReducer(web3Reducer,defaultWeb3State),_useReducer2=_slicedToArray(_useReducer,2),web3State=_useReducer2[0],dispatchWeb3Action=_useReducer2[1];var loadAccountHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(web3){var accounts,account;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return web3.eth.getAccounts();case 2:accounts=_context.sent;account=accounts[0];dispatchWeb3Action({type:'ACCOUNT',account:account});return _context.abrupt(\"return\",account);case 6:case\"end\":return _context.stop();}}},_callee);}));return function loadAccountHandler(_x){return _ref.apply(this,arguments);};}();var loadNetworkIdHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(web3){var networkId;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3.eth.net.getId();case 2:networkId=_context2.sent;dispatchWeb3Action({type:'NETWORKID',networkId:networkId});return _context2.abrupt(\"return\",networkId);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function loadNetworkIdHandler(_x2){return _ref2.apply(this,arguments);};}();var web3Context={account:web3State.account,networkId:web3State.networkId,loadAccount:loadAccountHandler,loadNetworkId:loadNetworkIdHandler};return/*#__PURE__*/_jsx(Web3Context.Provider,{value:web3Context,children:props.children});};export default Web3Provider;","map":{"version":3,"sources":["C:/Users/pavik/Desktop/nft-marketplace/src/store/Web3Provider.js"],"names":["useReducer","Web3Context","defaultWeb3State","account","networkId","web3Reducer","state","action","type","Web3Provider","props","web3State","dispatchWeb3Action","loadAccountHandler","web3","eth","getAccounts","accounts","loadNetworkIdHandler","net","getId","web3Context","loadAccount","loadNetworkId","children"],"mappings":"odAAA,OAASA,UAAT,KAA2B,OAA3B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBC,OAAO,CAAE,IADc,CAEvBC,SAAS,CAAE,IAFY,CAAzB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,GAAGA,MAAM,CAACC,IAAP,GAAgB,SAAnB,CAA8B,CAC5B,MAAO,CACLL,OAAO,CAAEI,MAAM,CAACJ,OADX,CAELC,SAAS,CAAEE,KAAK,CAACF,SAFZ,CAAP,CAID,CAED,GAAGG,MAAM,CAACC,IAAP,GAAgB,WAAnB,CAAgC,CAC9B,MAAO,CACLL,OAAO,CAAEG,KAAK,CAACH,OADV,CAELC,SAAS,CAAEG,MAAM,CAACH,SAFb,CAAP,CAID,CAED,MAAOF,CAAAA,gBAAP,CACD,CAhBD,CAkBA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5B,gBAAwCV,UAAU,CAACK,WAAD,CAAcH,gBAAd,CAAlD,4CAAOS,SAAP,iBAAkBC,kBAAlB,iBAEA,GAAMC,CAAAA,kBAAkB,0FAAG,iBAAMC,IAAN,6JACFA,CAAAA,IAAI,CAACC,GAAL,CAASC,WAAT,EADE,QACnBC,QADmB,eAEnBd,OAFmB,CAETc,QAAQ,CAAC,CAAD,CAFC,CAGzBL,kBAAkB,CAAC,CAACJ,IAAI,CAAE,SAAP,CAAkBL,OAAO,CAAEA,OAA3B,CAAD,CAAlB,CAHyB,gCAIlBA,OAJkB,wDAAH,kBAAlBU,CAAAA,kBAAkB,4CAAxB,CAOA,GAAMK,CAAAA,oBAAoB,2FAAG,kBAAMJ,IAAN,2JACHA,CAAAA,IAAI,CAACC,GAAL,CAASI,GAAT,CAAaC,KAAb,EADG,QACrBhB,SADqB,gBAE3BQ,kBAAkB,CAAC,CAACJ,IAAI,CAAE,WAAP,CAAoBJ,SAAS,CAAEA,SAA/B,CAAD,CAAlB,CAF2B,iCAGpBA,SAHoB,0DAAH,kBAApBc,CAAAA,oBAAoB,8CAA1B,CAMA,GAAMG,CAAAA,WAAW,CAAG,CAClBlB,OAAO,CAACQ,SAAS,CAACR,OADA,CAElBC,SAAS,CAAEO,SAAS,CAACP,SAFH,CAGlBkB,WAAW,CAAET,kBAHK,CAIlBU,aAAa,CAAEL,oBAJG,CAApB,CAOA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEG,WAA7B,UACGX,KAAK,CAACc,QADT,EADF,CAKD,CA5BD,CA8BA,cAAef,CAAAA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport Web3Context from './web3-context';\r\n\r\nconst defaultWeb3State = {\r\n  account: null,\r\n  networkId: null\r\n};\r\n\r\nconst web3Reducer = (state, action) => {\r\n  if(action.type === 'ACCOUNT') {\r\n    return {\r\n      account: action.account,\r\n      networkId: state.networkId\r\n    };\r\n  } \r\n  \r\n  if(action.type === 'NETWORKID') {\r\n    return {\r\n      account: state.account,\r\n      networkId: action.networkId\r\n    };\r\n  }\r\n  \r\n  return defaultWeb3State;\r\n};\r\n\r\nconst Web3Provider = props => {\r\n  const [web3State, dispatchWeb3Action] = useReducer(web3Reducer, defaultWeb3State);\r\n  \r\n  const loadAccountHandler = async(web3) => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const account = accounts[0];\r\n    dispatchWeb3Action({type: 'ACCOUNT', account: account});\r\n    return account;\r\n  };\r\n\r\n  const loadNetworkIdHandler = async(web3) => {\r\n    const networkId = await web3.eth.net.getId();\r\n    dispatchWeb3Action({type: 'NETWORKID', networkId: networkId});\r\n    return networkId;   \r\n  };\r\n  \r\n  const web3Context = {\r\n    account:web3State.account,\r\n    networkId: web3State.networkId,\r\n    loadAccount: loadAccountHandler,\r\n    loadNetworkId: loadNetworkIdHandler\r\n  };\r\n  \r\n  return (\r\n    <Web3Context.Provider value={web3Context}>\r\n      {props.children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Web3Provider;"]},"metadata":{},"sourceType":"module"}